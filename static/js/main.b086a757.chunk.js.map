{"version":3,"sources":["components/Title/index.js","components/Search/index.js","components/EmployeeRow/index.js","components/ThWithSort/index.js","components/EmployeeTable/index.js","API.js","components/Container/index.js","App.js","index.js"],"names":["Title","props","className","children","Search","value","search","onChange","handleInputChange","name","myFilter","type","placeholder","placeHolder","EmployeeRow","alt","employee","picture","medium","src","title","last","first","dob","age","location","city","country","postcode","email","ThWithSort","ind","subInd","scope","onClick","handleSort","EmployeeTable","thName","employees","map","login","uuid","BASE_URL","apiUrl","seed","numRes","limitNationality","axios","get","Container","style","SEED","App","state","filteredEmployees","event","setState","target","toLowerCase","filter","item","filterSearch","includes","toString","cell","indexToSort","subIndexToSort","ascDesc","sort","a","b","itemA","itemB","comparison","searchEmployees","API","then","res","data","results","catch","err","console","log","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b086a757.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return <h1 className=\"title\">{props.children}</h1>;\r\n}\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Search(props) {\r\n  // The search box template.\r\n  return (\r\n      <form className=\"search\">\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={props.search}\r\n            onChange={props.handleInputChange}\r\n            name={\"search-\" + props.myFilter}  // Required so we know which search box is being used.\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder={props.placeHolder}\r\n          />\r\n        </div>\r\n      </form>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction EmployeeRow(props) {\r\n  // The employee template.\r\n  return (\r\n    <tr>\r\n      <td><img alt={props.employee.picture.medium} src={props.employee.picture.medium} title={props.employee.name.last + \", \" + props.employee.name.first}/></td>\r\n      <td>{props.employee.name.title}</td>\r\n      <td>{props.employee.name.last}</td>\r\n      <td>{props.employee.name.first}</td>\r\n      <td>{props.employee.dob.age}</td>\r\n      <td>{props.employee.location.city}</td>\r\n      <td>{props.employee.location.country}</td>\r\n      <td>{props.employee.location.postcode}</td>\r\n      <td>{props.employee.email}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default EmployeeRow;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ThWithSort(props) {\r\n  // simple template for the sort arrows.\r\n  const ind = props.ind;\r\n  const subInd = props.subInd ? props.subInd : null;\r\n  return (\r\n    <th scope=\"col\">\r\n      <div className={\"row\"}>\r\n        <div className={\"col-md-4\"}>\r\n          <div className={\"sort-asc\"}>\r\n            <i onClick={() => props.handleSort(ind, subInd)} className=\"fas fa-sort-up\"></i>\r\n          </div>\r\n          <div className={\"sort-des\"}>\r\n            <i onClick={() => props.handleSort(ind, subInd, null)} className=\"fas fa-sort-down\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </th>\r\n  )\r\n}\r\n\r\nexport default ThWithSort;\r\n","import React from \"react\";\r\nimport EmployeeRow from \"../EmployeeRow\";\r\nimport ThWithSort from \"../ThWithSort\";\r\nimport \"./style.css\";\r\nimport Search from \"../Search\";\r\n\r\nfunction EmployeeTable(props) {\r\n  return (\r\n    <table className={\"table table-striped\"}>\r\n      <thead>\r\n      {/*create some headers for the sort arrows*/}\r\n      <tr>\r\n        <th scope=\"col\"></th>\r\n        <ThWithSort handleSort={props.handleSort} thName={\"\"} ind={\"name\"} subInd={\"title\"}/>\r\n        <ThWithSort handleSort={props.handleSort} thName={\"\"} ind={\"name\"} subInd={\"last\"}/>\r\n        <ThWithSort handleSort={props.handleSort} thName={\"\"} ind={\"name\"} subInd={\"first\"}/>\r\n        <ThWithSort handleSort={props.handleSort} thName={\"\"} ind={\"dob\"} subInd={\"age\"}/>\r\n        <ThWithSort handleSort={props.handleSort} thName={\"\"} ind={\"location\"} subInd={\"city\"}/>\r\n        <ThWithSort handleSort={props.handleSort} thName={\"\"} ind={\"location\"} subInd={\"country\"}/>\r\n        <ThWithSort handleSort={props.handleSort} thName={\"\"} ind={\"location\"} subInd={\"postcode\"}/>\r\n        <ThWithSort handleSort={props.handleSort} thName={\"\"} ind={\"email\"} subInd={false}/>\r\n      </tr>\r\n      {/*create some headers for the search / filter boxes.*/}\r\n      <tr>\r\n        <th>Image</th>\r\n        <th>Gender</th>\r\n        <th><Search handleInputChange={props.handleInputChange} myFilter={\"NameLast\"} placeHolder={\"Last\"} /></th>\r\n        <th><Search handleInputChange={props.handleInputChange} myFilter={\"nameFirst\"} placeHolder={\"First\"} /></th>\r\n        <th><Search handleInputChange={props.handleInputChange} myFilter={\"dobAge\"} placeHolder={\"Age\"} /></th>\r\n        <th><Search handleInputChange={props.handleInputChange} myFilter={\"locationCity\"} placeHolder={\"City\"} /></th>\r\n        <th><Search handleInputChange={props.handleInputChange} myFilter={\"locationCountry\"} placeHolder={\"Country\"} /></th>\r\n        <th><Search handleInputChange={props.handleInputChange} myFilter={\"LocationPostcode\"} placeHolder={\"Postcode\"} /></th>\r\n        <th><Search handleInputChange={props.handleInputChange} myFilter={\"email\"} placeHolder={\"Email\"} /></th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      {/*list the employees, ensure a key is added.*/}\r\n      {props.employees.map(employee => (\r\n        <EmployeeRow employee={employee} key={employee.login.uuid} />\r\n      ))}\r\n\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default EmployeeTable;\r\n","import axios from \"axios\";\r\nconst BASE_URL = `https://randomuser.me/api/?`;\r\n\r\n// get and return employees from randomuser.\r\nexport default {\r\n  search: function (seed = null, numRes = 5, limitNationality = null) {\r\n    let apiUrl;\r\n    apiUrl = BASE_URL + `results=${numRes}`;\r\n    apiUrl = seed ? apiUrl + `&seed=${seed}` : apiUrl;\r\n    apiUrl = limitNationality ? apiUrl + `&nat=${limitNationality}` : apiUrl;\r\n\r\n    return axios.get(apiUrl);\r\n  }\r\n};","import React from \"react\";\r\n\r\nfunction Container(props) {\r\n  return <div className=\"container\" style={props.style}>{props.children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import React, { Component } from \"react\";\r\nimport Title from \"./components/Title\";\r\nimport Search from \"./components/Search\";\r\nimport EmployeeTable from \"./components/EmployeeTable\";\r\nimport API from \"./API\";\r\nimport Container from \"./components/Container\";\r\n\r\n// some constants for the api search.\r\nconst SEED = \"jayarghargh\";\r\nconst NUM_RES = 500;\r\nconst NATIONALITY = \"au\";\r\n\r\nclass App extends Component {\r\n  // Setting the state to the employees array.\r\n  state = {\r\n    employees: [],\r\n    filteredEmployees: [],\r\n    search: \"\"\r\n  };\r\n\r\n  // When this component mounts, load some employees.\r\n  componentDidMount() {\r\n    this.searchEmployees();\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    // On input search for matching details in database.\r\n    this.setState({ search: event.target.value.toLowerCase() }, () => {\r\n      // Use a callback function to let the state set before using it.\r\n      this.setState(\r\n        {filteredEmployees: this.state.employees.filter(\r\n          item => {\r\n            let filterSearch;\r\n            // Determine which filter to apply.\r\n            // TODO refactor this for readability.\r\n            switch (event.target.name) {\r\n              case \"search-nameFirst\":\r\n                filterSearch = item.name.first.toLowerCase().includes(this.state.search);\r\n                break;\r\n              case \"search-nameLast\":\r\n                filterSearch = item.name.last.toLowerCase().includes(this.state.search);\r\n                break;\r\n              case \"search-dobAge\":\r\n                filterSearch = item.dob.age.toString().includes(this.state.search);\r\n                break;\r\n              case \"search-locationCity\":\r\n                filterSearch = item.location.city.toLowerCase().includes(this.state.search);\r\n                break;\r\n              case \"search-locationCountry\":\r\n                filterSearch = item.location.country.toLowerCase().includes(this.state.search);\r\n                break;\r\n              case \"search-locationPostcode\":\r\n                filterSearch = item.location.postcode.toString().includes(this.state.search);\r\n                break;\r\n              case \"search-email\":\r\n                filterSearch = item.email.toLowerCase().includes(this.state.search);\r\n                break;\r\n              case \"search-cell\":\r\n                filterSearch = item.cell.toLowerCase().includes(this.state.search);\r\n                break;\r\n\r\n              default:\r\n                filterSearch = (\r\n                  // gotta catch em all!\r\n                  item.name.first.toLowerCase().includes(this.state.search)\r\n                  || item.name.last.toLowerCase().includes(this.state.search)\r\n                  || item.dob.age.toString().includes(this.state.search)\r\n                  || item.location.city.toLowerCase().includes(this.state.search)\r\n                  || item.location.country.toLowerCase().includes(this.state.search)\r\n                  || item.location.postcode.toString().toLowerCase().includes(this.state.search)\r\n                  || item.email.toLowerCase().includes(this.state.search)\r\n                )\r\n            }\r\n            return filterSearch;\r\n          }\r\n          )\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  handleSort = (indexToSort, subIndexToSort = null, ascDesc = 1) => {\r\n    // Simply sort the filtered array.\r\n    this.setState({filteredEmployees: this.state.filteredEmployees.sort((a, b) => {\r\n      let itemA;\r\n      let itemB;\r\n      let comparison = 0;\r\n\r\n      // Allow for some nested elements.\r\n      if (!subIndexToSort) {\r\n        itemA = a[indexToSort];\r\n        itemB = b[indexToSort];\r\n      } else {\r\n\r\n        itemA = a[indexToSort][subIndexToSort];\r\n        itemB = b[indexToSort][subIndexToSort];\r\n      }\r\n\r\n      // convert strings to lowercase for search matching.\r\n      if (typeof itemA === \"string\") itemA = itemA.toLowerCase();\r\n      if (typeof itemB === \"string\") itemB = itemB.toLowerCase();\r\n\r\n      // Allow for ascending / descending\r\n        if (ascDesc) {\r\n          if (itemA > itemB) {\r\n            comparison = 1;\r\n          } else if (itemA < itemB) {\r\n            comparison = -1;\r\n          }\r\n        } else {\r\n          if (itemA > itemB) {\r\n            comparison = -1;\r\n          } else if (itemA < itemB) {\r\n            comparison = 1;\r\n          }\r\n        }\r\n      return comparison;\r\n    })});\r\n  }\r\n\r\n  searchEmployees = () => {\r\n    // the search method.\r\n    API.search(SEED, NUM_RES, NATIONALITY)\r\n      .then(res => this.setState({employees: res.data.results}))\r\n      .then(() => this.setState({filteredEmployees: this.state.employees}))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Title>Employee Directory</Title>\r\n        {/*TODO add number results returned.*/}\r\n\r\n        {/*The search all*/}\r\n        <div className={\"row\"}>\r\n          <div className={\"col-md-12\"}>\r\n            <Search handleInputChange={this.handleInputChange} myFilter={\"everything\"} placeHolder={\"Dagnammit search everything!\"}/>\r\n          </div>\r\n        </div>\r\n\r\n        {/*The main layout.*/}\r\n        <div className={\"row\"}>\r\n          <div className={\"col-md-12\"}>\r\n            <EmployeeTable\r\n              employees={this.state.filteredEmployees}\r\n              handleSort={this.handleSort}\r\n              handleInputChange={this.handleInputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}