{"version":3,"sources":["components/Wrapper/index.js","components/Title/index.js","components/Search/index.js","components/EmployeeRow/index.js","components/ThWithSort/index.js","components/EmployeeTable/index.js","API.js","App.js","index.js"],"names":["Wrapper","props","className","children","Title","Search","value","search","onChange","handleInputChange","name","myFilter","type","placeholder","placeHolder","EmployeeRow","alt","employee","picture","medium","src","title","last","first","dob","age","location","city","country","postcode","email","ThWithSort","ind","subInd","scope","onClick","handleSort","EmployeeTable","thName","employees","map","login","uuid","USE_SEED","BASE_URL","seed","axios","get","App","state","filteredEmployees","event","setState","target","toLowerCase","filter","item","filterSearch","includes","toString","cell","password","indexToSort","subIndexToSort","ascDesc","sort","a","b","itemA","itemB","comparison","searchEmployees","useSeed","API","then","res","data","results","catch","err","console","log","this","Component","ReactDOM","render","document","getElementById"],"mappings":"iTAOeA,MAJf,SAAiBC,GACf,OAAO,qBAAKC,UAAU,UAAf,SAA0BD,EAAME,Y,MCG1BC,MAJf,SAAeH,GACb,OAAO,oBAAIC,UAAU,QAAd,SAAuBD,EAAME,Y,MCmBvBE,MAnBf,SAAgBJ,GACd,OAEI,sBAAMC,UAAU,SAAhB,SACE,qBAAKA,UAAU,aAAf,SACE,uBACEI,MAAOL,EAAMM,OACbC,SAAUP,EAAMQ,kBAChBC,KAAM,UAAYT,EAAMU,SACxBC,KAAK,OACLV,UAAU,eACVW,YAAaZ,EAAMa,mB,MCMhBC,MAlBf,SAAqBd,GAEnB,OACE,+BACE,6BAAI,qBAAKe,IAAKf,EAAMgB,SAASC,QAAQC,OAAQC,IAAKnB,EAAMgB,SAASC,QAAQC,OAAQE,MAAOpB,EAAMgB,SAASP,KAAKY,KAAO,KAAOrB,EAAMgB,SAASP,KAAKa,UAC9I,6BAAKtB,EAAMgB,SAASP,KAAKW,QACzB,6BAAKpB,EAAMgB,SAASP,KAAKY,OACzB,6BAAKrB,EAAMgB,SAASP,KAAKa,QACzB,6BAAKtB,EAAMgB,SAASO,IAAIC,MACxB,6BAAKxB,EAAMgB,SAASS,SAASC,OAC7B,6BAAK1B,EAAMgB,SAASS,SAASE,UAC7B,6BAAK3B,EAAMgB,SAASS,SAASG,WAC7B,6BAAK5B,EAAMgB,SAASa,Y,MCWXC,MAvBf,SAAoB9B,GAClB,IAAM+B,EAAM/B,EAAM+B,IAEZC,EAAShC,EAAMgC,OAAShC,EAAMgC,OAAS,KAC7C,OACE,oBAAIC,MAAM,MAAV,SAIE,qBAAKhC,UAAW,MAAhB,SACE,sBAAKA,UAAW,WAAhB,UACE,qBAAKA,UAAW,WAAhB,SACE,mBAAGiC,QAAS,kBAAMlC,EAAMmC,WAAWJ,EAAKC,IAAS/B,UAAU,qBAE7D,qBAAKA,UAAW,WAAhB,SACE,mBAAGiC,QAAS,kBAAMlC,EAAMmC,WAAWJ,EAAKC,EAAQ,OAAO/B,UAAU,+B,MC4B9DmC,MAxCf,SAAuBpC,GAErB,OACE,wBAAOC,UAAW,sBAAlB,UACE,kCACA,+BACE,oBAAIgC,MAAM,MAAV,mBACA,cAAC,EAAD,CAAYE,WAAYnC,EAAMmC,WAAYE,OAAQ,GAAIN,IAAK,OAAQC,OAAQ,UAC3E,cAAC,EAAD,CAAYG,WAAYnC,EAAMmC,WAAYE,OAAQ,GAAIN,IAAK,OAAQC,OAAQ,SAC3E,cAAC,EAAD,CAAYG,WAAYnC,EAAMmC,WAAYE,OAAQ,GAAIN,IAAK,OAAQC,OAAQ,UAC3E,cAAC,EAAD,CAAYG,WAAYnC,EAAMmC,WAAYE,OAAQ,GAAIN,IAAK,MAAOC,OAAQ,QAC1E,cAAC,EAAD,CAAYG,WAAYnC,EAAMmC,WAAYE,OAAQ,GAAIN,IAAK,WAAYC,OAAQ,SAC/E,cAAC,EAAD,CAAYG,WAAYnC,EAAMmC,WAAYE,OAAQ,GAAIN,IAAK,WAAYC,OAAQ,YAC/E,cAAC,EAAD,CAAYG,WAAYnC,EAAMmC,WAAYE,OAAQ,GAAIN,IAAK,WAAYC,OAAQ,aAC/E,cAAC,EAAD,CAAYG,WAAYnC,EAAMmC,WAAYE,OAAQ,GAAIN,IAAK,QAASC,QAAQ,OAG9E,+BACE,uBAEA,uBACA,6BAAI,cAAC,EAAD,CAAQxB,kBAAmBR,EAAMQ,kBAAmBE,SAAU,WAAYG,YAAa,WAC3F,6BAAI,cAAC,EAAD,CAAQL,kBAAmBR,EAAMQ,kBAAmBE,SAAU,YAAaG,YAAa,YAC5F,6BAAI,cAAC,EAAD,CAAQL,kBAAmBR,EAAMQ,kBAAmBE,SAAU,SAAUG,YAAa,UACzF,6BAAI,cAAC,EAAD,CAAQL,kBAAmBR,EAAMQ,kBAAmBE,SAAU,eAAgBG,YAAa,WAC/F,6BAAI,cAAC,EAAD,CAAQL,kBAAmBR,EAAMQ,kBAAmBE,SAAU,kBAAmBG,YAAa,cAClG,6BAAI,cAAC,EAAD,CAAQL,kBAAmBR,EAAMQ,kBAAmBE,SAAU,mBAAoBG,YAAa,eACnG,6BAAI,cAAC,EAAD,CAAQL,kBAAmBR,EAAMQ,kBAAmBE,SAAU,QAASG,YAAa,kBAI1F,gCACCb,EAAMsC,UAAUC,KAAI,SAAAvB,GAAQ,OAC3B,cAAC,EAAD,CAAaA,SAAUA,GAAeA,EAASwB,MAAMC,e,gBCjCvDC,EAAW,cAEXC,EAAQ,6CANM,IAMN,gBAJM,MAML,EACL,WAAyB,IAAfC,EAAc,wDAC9B,OAAIA,EACKC,IAAMC,IAAIH,EAAQ,gBAAYD,IAE9BG,IAAMC,IAAIH,ICgIRI,E,4MAtIbC,MAAQ,CACNV,UAAW,GACXW,kBAAmB,GACnB3C,OAAQ,I,EAQVE,kBAAoB,SAAC0C,GAEnB,EAAKC,SAAS,CAAE7C,OAAQ4C,EAAME,OAAO/C,MAAMgD,gBAAiB,WAE1D,EAAKF,SACH,CAACF,kBAAmB,EAAKD,MAAMV,UAAUgB,QACvC,SAAAC,GACE,IAAIC,EACJ,OAAQN,EAAME,OAAO3C,MACnB,IAAK,mBACH+C,EAAeD,EAAK9C,KAAKa,MAAM+B,cAAcI,SAAS,EAAKT,MAAM1C,QACjE,MACF,IAAK,kBACHkD,EAAeD,EAAK9C,KAAKY,KAAKgC,cAAcI,SAAS,EAAKT,MAAM1C,QAChE,MACF,IAAK,gBACHkD,EAAeD,EAAKhC,IAAIC,IAAIkC,WAAWD,SAAS,EAAKT,MAAM1C,QAC3D,MACF,IAAK,sBACHkD,EAAeD,EAAK9B,SAASC,KAAK2B,cAAcI,SAAS,EAAKT,MAAM1C,QACpE,MACF,IAAK,yBACHkD,EAAeD,EAAK9B,SAASE,QAAQ0B,cAAcI,SAAS,EAAKT,MAAM1C,QACvE,MACF,IAAK,0BACHkD,EAAeD,EAAK9B,SAASG,SAAS8B,WAAWD,SAAS,EAAKT,MAAM1C,QACrE,MACF,IAAK,eACHkD,EAAeD,EAAK1B,MAAMwB,cAAcI,SAAS,EAAKT,MAAM1C,QAC5D,MACF,IAAK,cACHkD,EAAeD,EAAKI,KAAKN,cAAcI,SAAS,EAAKT,MAAM1C,QAC3D,MAEF,QACEkD,EAEED,EAAK9C,KAAKa,MAAM+B,cAAcI,SAAS,EAAKT,MAAM1C,SAC/CiD,EAAK9C,KAAKY,KAAKgC,cAAcI,SAAS,EAAKT,MAAM1C,SACjDiD,EAAKf,MAAMoB,SAASP,cAAcI,SAAS,EAAKT,MAAM1C,SACtDiD,EAAKhC,IAAIC,IAAIkC,WAAWD,SAAS,EAAKT,MAAM1C,SAC5CiD,EAAK9B,SAASC,KAAK2B,cAAcI,SAAS,EAAKT,MAAM1C,SACrDiD,EAAK9B,SAASE,QAAQ0B,cAAcI,SAAS,EAAKT,MAAM1C,SACxDiD,EAAK9B,SAASG,SAAS8B,WAAWL,cAAcI,SAAS,EAAKT,MAAM1C,SACpEiD,EAAK1B,MAAMwB,cAAcI,SAAS,EAAKT,MAAM1C,QAGtD,OAAOkD,W,EAQjBrB,WAAa,SAAC0B,GAAqD,IAAxCC,EAAuC,uDAAtB,KAAMC,EAAgB,uDAAN,EAE1D,EAAKZ,SAAS,CAACF,kBAAmB,EAAKD,MAAMC,kBAAkBe,MAAK,SAACC,EAAGC,GACtE,IAAIC,EACAC,EACAC,EAAa,EA6BjB,OA1BKP,GAKHK,EAAQF,EAAEJ,GAAaC,GACvBM,EAAQF,EAAEL,GAAaC,KALvBK,EAAQF,EAAEJ,GACVO,EAAQF,EAAEL,IAOS,kBAAVM,IAAoBA,EAAQA,EAAMd,eACxB,kBAAVe,IAAoBA,EAAQA,EAAMf,eAGvCU,EACEI,EAAQC,EACVC,EAAa,EACJF,EAAQC,IACjBC,GAAc,GAGZF,EAAQC,EACVC,GAAc,EACLF,EAAQC,IACjBC,EAAa,GAGZA,Q,EAIXC,gBAAkB,WAAqB,IAApBC,IAAmB,yDACpCC,EAAWD,GACRE,MAAK,SAAAC,GAAG,OAAI,EAAKvB,SAAS,CAACb,UAAWoC,EAAIC,KAAKC,aAC/CH,MAAK,kBAAM,EAAKtB,SAAS,CAACF,kBAAmB,EAAKD,MAAMV,eACxDuC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,uDArG9B,WACEG,KAAKX,oB,oBAuGP,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,iCACA,qBAAKrE,UAAW,MAAhB,SACE,qBAAKA,UAAW,YAAhB,SACE,cAAC,EAAD,CAAQO,kBAAmByE,KAAKzE,kBAAmBE,SAAU,aAAcG,YAAa,qCAK5F,qBAAKZ,UAAW,YAAhB,SACE,cAAC,EAAD,CACEqC,UAAW2C,KAAKjC,MAAMC,kBACtBd,WAAY8C,KAAK9C,WACjB3B,kBAAmByE,KAAKzE,6B,GAhIlB0E,a,YCDlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e4d6edf1.chunk.js","sourcesContent":["import React from \"react\";\r\n// import \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Title(props) {\r\n  return <h1 className=\"title\">{props.children}</h1>;\r\n}\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\r\nfunction Search(props) {\r\n  return (\r\n\r\n      <form className=\"search\">\r\n        <div className=\"form-group\">\r\n          <input\r\n            value={props.search}\r\n            onChange={props.handleInputChange}\r\n            name={\"search-\" + props.myFilter}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder={props.placeHolder}\r\n          />\r\n        </div>\r\n      </form>\r\n\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction EmployeeRow(props) {\r\n  // const employee = props.employee;\r\n  return (\r\n    <tr>\r\n      <td><img alt={props.employee.picture.medium} src={props.employee.picture.medium} title={props.employee.name.last + \", \" + props.employee.name.first}/></td>\r\n      <td>{props.employee.name.title}</td>\r\n      <td>{props.employee.name.last}</td>\r\n      <td>{props.employee.name.first}</td>\r\n      <td>{props.employee.dob.age}</td>\r\n      <td>{props.employee.location.city}</td>\r\n      <td>{props.employee.location.country}</td>\r\n      <td>{props.employee.location.postcode}</td>\r\n      <td>{props.employee.email}</td>\r\n      {/*<td>{props.employee.cell}</td>*/}\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default EmployeeRow;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ThWithSort(props) {\r\n  const ind = props.ind;\r\n  // const subInd = null;\r\n  const subInd = props.subInd ? props.subInd : null;\r\n  return (\r\n    <th scope=\"col\">\r\n      {/*{props.thName}*/}\r\n      {/*<i onClick={() => props.handleSort(ind, subInd)} className=\"fas fa-sort-up\"></i>*/}\r\n      {/*<i onClick={() => props.handleSort(ind, subInd, null)} className=\"fas fa-sort-down\"></i>*/}\r\n      <div className={\"row\"}>\r\n        <div className={\"col-md-4\"}>\r\n          <div className={\"sort-asc\"}>\r\n            <i onClick={() => props.handleSort(ind, subInd)} className=\"fas fa-sort-up\"></i>\r\n          </div>\r\n          <div className={\"sort-des\"}>\r\n            <i onClick={() => props.handleSort(ind, subInd, null)} className=\"fas fa-sort-down\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </th>\r\n  )\r\n}\r\n\r\nexport default ThWithSort;\r\n","import React from \"react\";\r\nimport EmployeeRow from \"../EmployeeRow\";\r\nimport ThWithSort from \"../ThWithSort\";\r\nimport \"./style.css\";\r\nimport Search from \"../Search\";\r\n\r\nfunction EmployeeTable(props) {\r\n  // const employees = props.employees;\r\n  return (\r\n    <table className={\"table table-striped\"}>\r\n      <thead>\r\n      <tr>\r\n        <th scope=\"col\">Image</th>\r\n        <ThWithSort handleSort={props.handleSort} thName={\"\"} ind={\"name\"} subInd={\"title\"}/>\r\n        <ThWithSort handleSort={props.handleSort} thName={\"\"} ind={\"name\"} subInd={\"last\"}/>\r\n        <ThWithSort handleSort={props.handleSort} thName={\"\"} ind={\"name\"} subInd={\"first\"}/>\r\n        <ThWithSort handleSort={props.handleSort} thName={\"\"} ind={\"dob\"} subInd={\"age\"}/>\r\n        <ThWithSort handleSort={props.handleSort} thName={\"\"} ind={\"location\"} subInd={\"city\"}/>\r\n        <ThWithSort handleSort={props.handleSort} thName={\"\"} ind={\"location\"} subInd={\"country\"}/>\r\n        <ThWithSort handleSort={props.handleSort} thName={\"\"} ind={\"location\"} subInd={\"postcode\"}/>\r\n        <ThWithSort handleSort={props.handleSort} thName={\"\"} ind={\"email\"} subInd={false}/>\r\n        {/*<ThWithSort handleSort={props.handleSort} thName={\"Mob\"} ind={\"cell\"} subInd={false}/>*/}\r\n      </tr>\r\n      <tr>\r\n        <th></th>\r\n        {/*<th><Search handleInputChange={props.handleInputChange} myFilter={\"nameTitle\"} placeHolder={\"Title\"} /></th>*/}\r\n        <th></th>\r\n        <th><Search handleInputChange={props.handleInputChange} myFilter={\"NameLast\"} placeHolder={\"Last\"} /></th>\r\n        <th><Search handleInputChange={props.handleInputChange} myFilter={\"nameFirst\"} placeHolder={\"First\"} /></th>\r\n        <th><Search handleInputChange={props.handleInputChange} myFilter={\"dobAge\"} placeHolder={\"Age\"} /></th>\r\n        <th><Search handleInputChange={props.handleInputChange} myFilter={\"locationCity\"} placeHolder={\"City\"} /></th>\r\n        <th><Search handleInputChange={props.handleInputChange} myFilter={\"locationCountry\"} placeHolder={\"Country\"} /></th>\r\n        <th><Search handleInputChange={props.handleInputChange} myFilter={\"LocationPostcode\"} placeHolder={\"Postcode\"} /></th>\r\n        <th><Search handleInputChange={props.handleInputChange} myFilter={\"email\"} placeHolder={\"Email\"} /></th>\r\n        {/*<th><Search handleInputChange={props.handleInputChange} myFilter={\"cell\"} placeHolder={\"Mob\"} /></th>*/}\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      {props.employees.map(employee => (\r\n        <EmployeeRow employee={employee} key={employee.login.uuid} />\r\n      ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default EmployeeTable;\r\n","import axios from \"axios\";\r\n// Set the number of results returned.\r\nconst RESULTS_NUM = 500;\r\n// Localise the results so the formats look familiar.\r\nconst NATIONALITY = \"au\";\r\n// Use a seed so the results are the same (then we can filter \"our\" employees)\r\nconst USE_SEED = \"jayarghargh\";\r\n// Tie it together.\r\nconst BASE_URL = `https://randomuser.me/api/?results=${RESULTS_NUM}&nat=${NATIONALITY}`;\r\n\r\nexport default {\r\n  search: function (seed = false) {\r\n    if (seed) {\r\n      return axios.get(BASE_URL + `&seed=${USE_SEED}`);\r\n    } else {\r\n      return axios.get(BASE_URL);\r\n    }\r\n  }\r\n};","import React, { Component } from \"react\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Title from \"./components/Title\";\r\nimport Search from \"./components/Search\";\r\nimport EmployeeTable from \"./components/EmployeeTable\";\r\nimport API from \"./API\";\r\n\r\nclass App extends Component {\r\n  // Setting the state to the employees array.\r\n  state = {\r\n    employees: [],\r\n    filteredEmployees: [],\r\n    search: \"\"\r\n  };\r\n\r\n  // When this component mounts, load some employees.\r\n  componentDidMount() {\r\n    this.searchEmployees();\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    // On input search for matching details in database.\r\n    this.setState({ search: event.target.value.toLowerCase() }, () => {\r\n      // Use a callback function to let the state set before using it.\r\n      this.setState(\r\n        {filteredEmployees: this.state.employees.filter(\r\n          item => {\r\n            let filterSearch;\r\n            switch (event.target.name) {\r\n              case \"search-nameFirst\":\r\n                filterSearch = item.name.first.toLowerCase().includes(this.state.search);\r\n                break;\r\n              case \"search-nameLast\":\r\n                filterSearch = item.name.last.toLowerCase().includes(this.state.search);\r\n                break;\r\n              case \"search-dobAge\":\r\n                filterSearch = item.dob.age.toString().includes(this.state.search);\r\n                break;\r\n              case \"search-locationCity\":\r\n                filterSearch = item.location.city.toLowerCase().includes(this.state.search);\r\n                break;\r\n              case \"search-locationCountry\":\r\n                filterSearch = item.location.country.toLowerCase().includes(this.state.search);\r\n                break;\r\n              case \"search-locationPostcode\":\r\n                filterSearch = item.location.postcode.toString().includes(this.state.search);\r\n                break;\r\n              case \"search-email\":\r\n                filterSearch = item.email.toLowerCase().includes(this.state.search);\r\n                break;\r\n              case \"search-cell\":\r\n                filterSearch = item.cell.toLowerCase().includes(this.state.search);\r\n                break;\r\n\r\n              default:\r\n                filterSearch = (\r\n                  // gotta search em all!\r\n                  item.name.first.toLowerCase().includes(this.state.search)\r\n                  || item.name.last.toLowerCase().includes(this.state.search)\r\n                  || item.login.password.toLowerCase().includes(this.state.search)\r\n                  || item.dob.age.toString().includes(this.state.search)\r\n                  || item.location.city.toLowerCase().includes(this.state.search)\r\n                  || item.location.country.toLowerCase().includes(this.state.search)\r\n                  || item.location.postcode.toString().toLowerCase().includes(this.state.search)\r\n                  || item.email.toLowerCase().includes(this.state.search)\r\n                )\r\n            }\r\n            return filterSearch;\r\n          }\r\n          )\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  handleSort = (indexToSort, subIndexToSort = null, ascDesc = 1) => {\r\n    // Simply sort the filtered array.\r\n    this.setState({filteredEmployees: this.state.filteredEmployees.sort((a, b) => {\r\n      let itemA;\r\n      let itemB;\r\n      let comparison = 0;\r\n\r\n      // Allow for some nested elements.\r\n      if (!subIndexToSort) {\r\n        itemA = a[indexToSort]; //.toLowerCase();\r\n        itemB = b[indexToSort]; //.toLowerCase();\r\n      } else {\r\n\r\n        itemA = a[indexToSort][subIndexToSort] // .toLowerCase();\r\n        itemB = b[indexToSort][subIndexToSort] // .toLowerCase();\r\n      }\r\n\r\n      if (typeof itemA === \"string\") itemA = itemA.toLowerCase();\r\n      if (typeof itemB === \"string\") itemB = itemB.toLowerCase();\r\n\r\n      // Allow for ascending / descending\r\n        if (ascDesc) {\r\n          if (itemA > itemB) {\r\n            comparison = 1;\r\n          } else if (itemA < itemB) {\r\n            comparison = -1;\r\n          }\r\n        } else {\r\n          if (itemA > itemB) {\r\n            comparison = -1;\r\n          } else if (itemA < itemB) {\r\n            comparison = 1;\r\n          }\r\n        }\r\n      return comparison;\r\n    })});\r\n  }\r\n\r\n  searchEmployees = (useSeed = true) => {\r\n    API.search(useSeed)\r\n      .then(res => this.setState({employees: res.data.results}))\r\n      .then(() => this.setState({filteredEmployees: this.state.employees}))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Title>Employee Directory</Title>\r\n        <div className={\"row\"}>\r\n          <div className={\"col-md-12\"}>\r\n            <Search handleInputChange={this.handleInputChange} myFilter={\"everything\"} placeHolder={\"Dagnammit search everything!\"}/>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className={\"col-md-12\"}>\r\n          <EmployeeTable\r\n            employees={this.state.filteredEmployees}\r\n            handleSort={this.handleSort}\r\n            handleInputChange={this.handleInputChange}\r\n          />\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}